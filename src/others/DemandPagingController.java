/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package others;

import searching.*;
import sorting.*;
import sorting.Main;
import java.awt.*;
import java.awt.Color;
import java.util.LinkedList;
import java.util.Queue;
import java.util.*;
import java.util.function.Consumer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.util.Pair;
import javax.swing.JOptionPane;

/**
 *
 * @author Apar
 */
public class DemandPagingController extends javax.swing.JFrame {

    /**
     * Creates new form TestForm
     */
    
    private int x_min=120,y_min=225;
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    private int x_window=(int) screenSize.getWidth()*90/100;
    private int y_window=(int) screenSize.getHeight()*90/100;
    private int window=x_window*70/100;
    Graphics graphics;
    int delay=1000;
    private static int algoIndex=-1;
    MyThread mt=new MyThread();
            
    // specific variables
    private ArrayList<Integer> arrayList=new ArrayList<Integer>();
    private ArrayList<Integer> frame=new ArrayList<Integer>();
    private ArrayList<Integer> lruCounts=new ArrayList<Integer>();
    private Queue<Integer> fifoQue=new LinkedList<Integer>();
    private int size=0,max_size=18;
    private int frameSize=3;
    private int gap=55;
    final private int width=(window-x_min)/25;
    private final int margin=width/10*2;
    private final Color final_color=Color.YELLOW,
                        path_color=Color.ORANGE ,
                        highlight_color=Color.BLUE ;
    private final java.awt.Color initial_color=java.awt.Color.yellow,
                   source_color=java.awt.Color.decode("#EE82EE"),
                   background_color=java.awt.Color.decode("#d6d9e0"),
                   dest_color=Color.green,
                   temp_color=Color.decode("#A2B582"),
                   black_color=Color.BLACK;
    private int reffered=0,pfs=0;
    private int mru=0;
    private volatile boolean active=true; 
    private boolean running=false;
    boolean init=true,reset=false;
    
    public DemandPagingController() {
        initComponents();  
        setSize(x_window,y_window);
//        resetBoard();
//       graphics=getGraphics();
    }
    
    public void paint(Graphics g)
    {
        
        if(!init)
            return;
        init=false;      
        super.paint(g);
        graphics=g;
        g.setFont(new java.awt.Font("Tahoma", 0, 21));
        g.setColor(black_color);
        g.drawString("Ref String", 31, y_min-40);
        g.drawString("Missed",31, y_min+gap+531);
        g.drawLine(window, 0, window, y_window);
        graphics.setColor(path_color);
    }
    private void replay()
    {
//        reset(); 
        active=false;
        try {
            mt.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(DemandPagingController.class.getName()).log(Level.SEVERE, null, ex);
        }
        running=false;
        frame.removeAll(frame);
        lruCounts.removeAll(lruCounts);
        fifoQue.removeAll(fifoQue);
        mru=0;
        reffered=0;
        pfs=0;           
        pfCount.setText("");
        pfRate.setText("");
        graphics.setColor(background_color);
        for(int i=0;i<arrayList.size();i++)
        {
            graphics.fillRect(x_min + width*i+i*margin, y_min+gap, width, 500);
        }
      
        
    }
    private void reset()
    {
        active=false;
        try {
            mt.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(DemandPagingController.class.getName()).log(Level.SEVERE, null, ex);
        }
        init=true;
        repaint();
        running=false;
        if(!reset)
            arrayList.removeAll(arrayList);
        frame.removeAll(frame);
        lruCounts.removeAll(lruCounts);
        fifoQue.removeAll(fifoQue);
        mru=0;
        reffered=0;
        pfs=0;           
        pfCount.setText("");
        pfRate.setText("");    
        reset=false;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton9 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton10 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        inputField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        pfCount = new javax.swing.JLabel();
        pfRate = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Graph Algos");
        setMinimumSize(new java.awt.Dimension(1250, 700));

        jButton9.setBackground(new java.awt.Color(102, 153, 0));
        jButton9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 51, 51));
        jButton9.setText("HOME");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 102, 102));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Algorithm", "FIFO", "MRU", "LRU", "Optimal", "MFU", "LFU" }));

        jButton10.setBackground(new java.awt.Color(0, 153, 255));
        jButton10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Simulate");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Calligraphy", 1, 37)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 0));
        jLabel6.setText("Controller");

        jButton5.setBackground(new java.awt.Color(102, 153, 0));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 51, 51));
        jButton5.setText("RESET");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 35)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 51, 255));
        jLabel1.setText("Page Replacement -Demand Paging");

        inputField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        inputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFieldActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 153, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 29)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 0, 51));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Sitka Subheading", 0, 33)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 102, 0));
        jLabel2.setText("Total Page Faults");

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jRadioButton1.setText("5");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        jLabel3.setText("Frame Size");

        buttonGroup2.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("3");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jRadioButton3.setText("4");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        pfCount.setFont(new java.awt.Font("Sitka Subheading", 0, 34)); // NOI18N
        pfCount.setForeground(new java.awt.Color(255, 0, 51));

        pfRate.setFont(new java.awt.Font("Sitka Subheading", 0, 34)); // NOI18N
        pfRate.setForeground(new java.awt.Color(255, 0, 51));

        jLabel4.setFont(new java.awt.Font("Sitka Subheading", 0, 33)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 102, 0));
        jLabel4.setText("Page Fault Rate");

        jButton6.setBackground(new java.awt.Color(102, 153, 0));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 51, 51));
        jButton6.setText("CLEAR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pfCount, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pfRate, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(208, 208, 208))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addGap(201, 201, 201))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(596, 596, 596)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jRadioButton2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(53, 53, 53)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(45, 45, 45)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addGap(28, 28, 28)
                .addComponent(jButton5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pfRate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pfCount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(25, 25, 25))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    
    
   
    
    
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        
        Main mn=new Main();
        this.dispose();
        mn.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

//        MRU();
//        LRU();
//          Optimal();
//        Fifo();
//        FU("LFU");  
          jRadioButton1.setEnabled(false);
          jRadioButton2.setEnabled(false);
          jRadioButton3.setEnabled(false);
           if(running)
                return;
          active=true;
          algoIndex=jComboBox1.getSelectedIndex();
          mt=new MyThread();
          running=true;
          mt.start();
          
            

            // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed
    private void markMiss(int i)
    {
        graphics=getGraphics();
        graphics.setColor(Color.RED);
        graphics.fillOval(x_min + width*i+i*margin+8, y_min+gap+515, 20, 20);
    }
    private void append(int i)
    {
        // i is index of arraylist
        pfs++;
        for(int j=0;j<frame.size();j++)
        {
            if(!active)           
                return;
            
            sleep(delay);
            setFrameValue(j,i,frame.get(j), black_color);
        }             
        sleep(delay);
        frame.add(arrayList.get(i));
        setFrameValue(frame.size()-1,i,arrayList.get(i), highlight_color);
        markMiss(i);
    }
    private void printRow(int i)
    {
        for(int j=0;j<frame.size();j++)
        {
            if(!active)
            {
                return;
            }
            sleep(delay);
            setFrameValue(j,i,frame.get(j), black_color);
        }
    }
    private void replace(int i,int index)
    {
        pfs++;
        for(int j=0;j<frame.size();j++)
        {
            if(!active)
            {
                return;
            }
            sleep(delay);
            if(index==j)                    
            {
                frame.set(j,arrayList.get(i));
                setFrameValue(j,i,frame.get(j), highlight_color);
            }
             else 
                setFrameValue(j,i,frame.get(j), black_color);
            } 
        markMiss(i);
    }
    private void newRow(int i)
    {
        setRefValue(i, arrayList.get(i), highlight_color);
        graphics.setColor(path_color);
        graphics.fillRect(x_min + width*i+i*margin, y_min+gap, width, 500);
    }
    private void finish()
    {
        pfCount.setText(""+pfs);
        reffered=arrayList.size();
        pfRate.setText(String.format("%.2f",pfs*1.0/arrayList.size()*1.0));
        active=false;
        running=false;        
    }
    private void MRU()
    {

        for(;reffered<arrayList.size();reffered++)
        {       
            if(!active)
            {
                active=true;
                return;
            }
            int i=reffered;
            int ref=arrayList.get(i);
            newRow(i);
            if(frame.contains(ref))
            {
                mru=frame.indexOf(ref);
                printRow(i);
            }            
            //when frames have empty spaces
            else if(frame.size()<frameSize)
            {
                append(i);
                mru=frame.size()-1;
            }
            else{  // else we need to replace one frame
                replace(i, mru);
            }
            sleep(delay); 
            setRefValue(i, arrayList.get(i), black_color);
            if(!active)
            {
                active=true;
                return;
            }
        }
//        reffered=arrayList.size();
        finish();
    }
    
    private void LRU()
    {
        int size=arrayList.size();
        if(size==0)
            return;
        for(int i=reffered;i<arrayList.size();i++)
        {      
            if(!active)
            {
                active=true;
                return;
            }
            
            int ref=arrayList.get(i);
            newRow(i);
            if(frame.contains(arrayList.get(i)))
            {
                lruCounts.set(frame.indexOf(ref),-1);
                printRow(i);
                incLru();
            }           
            //when frames have empty spaces
            else if(frame.size()<frameSize)
            {
                append(i);
                incLru();
                lruCounts.add(0);
            }
            // else we need to replace one frame
            else{
                int min=Collections.max(lruCounts);
                int index=lruCounts.indexOf(min);
                replace(i, index);
                incLru();
                lruCounts.set(index,0);
                       
            }
            sleep(delay); 
            setRefValue(i, arrayList.get(i), black_color);
            if(!active)
            {
                active=true;
                return;
            }
             
        }
        finish();
        
        
    }
    private void incLru()
    {
        for(int j=0;j<lruCounts.size();j++)       
            lruCounts.set(j,lruCounts.get(j)+1);       
    }
    
    private void Optimal()
    {
         int size=arrayList.size();
        if(size==0)
            return;
        for(int i=reffered;i<arrayList.size();i++)
        {      
            if(!active)
            {
                active=true;
                return;
            }
            newRow(i);
            if(frame.contains(arrayList.get(i)))
            {
                printRow(i);
            }
            // if frame not in memory
            //when frames have empty spaces
            else if(frame.size()<frameSize)
            {
                append(i);
            }
            // else we need to replace one frame
            else{
                int ar[]=new int[frame.size()];
                for(int k=0;k<frame.size();k++)
                {
                    ar[k]=arrayList.size();
                    int count=0;
                    for(int j=i+1;j<arrayList.size();j++)
                    {
                        count++;
                        if(frame.get(k)==arrayList.get(j))
                        {
                            ar[k]=count;
                            break;
                        }
                    }
                }
                int maxm=Integer.MIN_VALUE,index=-1;
                for(int j=0;j<ar.length;j++)
                {
                    if(ar[j]>maxm)
                    {
                        maxm=ar[j];
                        index=j;
                    }
                }     
                replace(i, index);
                
            }
            sleep(delay); 
            setRefValue(i, arrayList.get(i), black_color);
            if(!active)
            {
                active=true;
                return;
            }
        }
        finish();
        
    }
    
    private void Fifo()
    {
        for(int i=reffered;i<arrayList.size();i++)
        {            
            if(!active)
            {
                active=true;
                return;
            }
            newRow(i);
            int ref=arrayList.get(i);
            if(frame.contains(arrayList.get(i)))
            {
                printRow(i);
            }
            // if frame not in memory
            //when frames have empty spaces
            else if(frame.size()<frameSize)
            {
                append(i);
                fifoQue.add(ref);
            }
            // else we need to replace one frame
            else{
                int index=frame.indexOf(fifoQue.poll());
                replace(i, index);
                fifoQue.add(ref);
            }            
            sleep(delay); 
            setRefValue(i, arrayList.get(i), black_color);
            if(!active)
            {
                active=true;
                return;
            }
        }
        finish();
        
    }
    private void FU(String type)
    {
        for(;reffered <arrayList.size();reffered++)
        {           
            if(!active)
            {
                active=true;
                return;
            }
            int i=reffered;
            newRow(i);
            int ref=arrayList.get(i);
            if(frame.contains(arrayList.get(i)))
            {
                printRow(i);
                int index=frame.indexOf(ref);
                lruCounts.set(index,lruCounts.get(index)+1);
            }
            // if frame not in memory
            //when frames have empty spaces
            else if(frame.size()<frameSize)
            {
                append(i);
                lruCounts.add(1);
            }
            // else we need to replace one frame
            else{
                int index=0;
                if(type.equals("MFU"))
                {
                    int max=Collections.max(lruCounts);
                    index=lruCounts.indexOf(max);
                }
                else{
                    int min=Collections.min(lruCounts);
                    index=lruCounts.indexOf(min);
                }
                
                replace(i, index);
            }            
            sleep(delay); 
            setRefValue(i, arrayList.get(i), black_color);
            if(!active)
            {
                active=true;
                return;
            }
        }
        finish();
        
    }
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        reset();
        jRadioButton1.setEnabled(true);
          jRadioButton2.setEnabled(true);
          jRadioButton3.setEnabled(true);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void inputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFieldActionPerformed
        jButton1.doClick();
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try{
            if(arrayList.size()>max_size)
                throw new Exception();
            int a=Integer.parseInt(inputField.getText());
            if(a<=0 || a>50)    throw new IllegalArgumentException();
            setRefValue(arrayList.size(), a, black_color);
            arrayList.add(a);
            inputField.setText("");
            inputField.requestFocus();
        }catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this, "Please enter valid input b/w 1 & 50");
        }
        catch(Exception er)
        {
            JOptionPane.showMessageDialog(this, "Array is full");
//            System.err.println(""+er+" - "+er.getMessage());
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
    frameSize=5;        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        frameSize=3;
//        System.out.println(""+3);
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        frameSize=4;
//        System./out.println(""+4); // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        replay();
        jRadioButton1.setEnabled(true);
          jRadioButton2.setEnabled(true);
          jRadioButton3.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

   private void setRefValue(int i,int value,Color c)
   {
       graphics=getGraphics();
       graphics.setColor(c);
       graphics.setFont(new java.awt.Font("Tahoma", 3, 26));
       graphics.drawString(""+value, i*(width+margin)+x_min+7, y_min);
       
   }
   
   private void setFrameValue(int j,int i,int value, Color c)
   {
       graphics=getGraphics();
       graphics.setColor(c);
       graphics.setFont(new java.awt.Font("Tahoma", 3, 26));
       graphics.drawString(""+value, i*(width+margin)+x_min+7, y_min+gap+85*(j+1));
       graphics.setColor(black_color);
       graphics.drawLine( i*(width+margin)+x_min, y_min+gap+85*(j+1)+10, i*(width+margin)+x_min+width,y_min+gap+85*(j+1)+10);
   }
   
   private void sleep(int time)
   {
        try {
            Thread.sleep(time);
        } catch (InterruptedException ex) {
            Logger.getLogger(DemandPagingController.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DemandPagingController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DemandPagingController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DemandPagingController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DemandPagingController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DemandPagingController().setVisible(true);
//                    new Grid().setVisible(true);
            }
        });
    }

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField inputField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JLabel pfCount;
    private javax.swing.JLabel pfRate;
    // End of variables declaration//GEN-END:variables



    class MyThread extends Thread{
        public void run()
        {
            switch(algoIndex)
            {
                case 1: Fifo(); break;
                case 2: MRU(); break;
                case 3: LRU(); break;
                case 4: Optimal(); break;
                case 5: FU("MFU"); break;
                case 6: FU("LFU"); break;
                default : JOptionPane.showMessageDialog(null, "Plesae Select an Algorithm");
                    running=false;
            }
        }
        
    }

     
 
}

